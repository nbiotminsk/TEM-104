# -*- coding: utf-8 -*-
"""
–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–ø–ª–æ—Å—á–µ—Ç—á–∏–∫–∞–º–∏ –¢–≠–ú-104
–ù–∞ –æ—Å–Ω–æ–≤–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ test104.py
"""

from test104 import TEM104_Serial_Client, TEM104_TCP_Client
import time
import json

# ============================================================================
# –ü–†–ò–ú–ï–† 1: –ü—Ä–æ—Å—Ç–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
# ============================================================================

def example_1_simple_identification():
    """–ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–±–æ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç."""
    
    print("=== –ü–†–ò–ú–ï–† 1: –ü—Ä–æ—Å—Ç–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è ===")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è COM-–ø–æ—Ä—Ç–∞
    client = TEM104_Serial_Client(
        port='COM3',      # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–æ—Ä—Ç
        baudrate=9600,    # –°–∫–æ—Ä–æ—Å—Ç—å
        address=1         # –ê–¥—Ä–µ—Å —Å—á–µ—Ç—á–∏–∫–∞
    )
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ COM-–ø–æ—Ä—Ç—É...")
        client.connect()
        print("‚úì –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç —É—Å–ø–µ—à–Ω–æ")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        print("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞...")
        protocol = client.auto_detect_protocol()
        
        if protocol:
            print(f"‚úì –ü—Ä–æ—Ç–æ–∫–æ–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω: {protocol}")
            print(f"  –ú–æ–¥–µ–ª—å: {client.protocol_type}")
        else:
            print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª")
            return
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()
        print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ\n")

# ============================================================================
# –ü–†–ò–ú–ï–† 2: –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
# ============================================================================

def example_2_read_all_data():
    """–ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""
    
    print("=== –ü–†–ò–ú–ï–† 2: –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö ===")
    
    client = TEM104_Serial_Client(port='COM3', baudrate=9600, address=1)
    
    try:
        client.connect()
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        data = client.read_all_data()
        
        if data:
            print("\nüìä –î–ê–ù–ù–´–ï –°–ß–ï–¢–ß–ò–ö–ê:")
            print("=" * 50)
            
            # –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            print("üî• –≠–ù–ï–†–ì–ï–¢–ò–ß–ï–°–ö–ò–ï –ü–ê–†–ê–ú–ï–¢–†–´:")
            print(f"  Q (–≠–Ω–µ—Ä–≥–∏—è):     {data.get('Q', '---'):>10.3f} –ì–∫–∞–ª")
            print(f"  M1 (–ú–∞—Å—Å–∞):      {data.get('M1', '---'):>10.3f} —Ç")
            
            # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            print("\nüå°Ô∏è  –¢–ï–ú–ü–ï–†–ê–¢–£–†–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´:")
            print(f"  T1 (–ü–æ–¥–∞—á–∞):     {data.get('T1', '---'):>10.2f} ¬∞C")
            print(f"  T2 (–û–±—Ä–∞—Ç–∫–∞):    {data.get('T2', '---'):>10.2f} ¬∞C")
            
            # –†–∞—Å—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            print("\nüíß –†–ê–°–•–û–î–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´:")
            print(f"  G1 (–†–∞—Å—Ö–æ–¥ 1):   {data.get('G1', '---'):>10.3f} –º¬≥/—á")
            print(f"  G2 (–†–∞—Å—Ö–æ–¥ 2):   {data.get('G2', '---'):>10.3f} –º¬≥/—á")
            
            # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            print("\n‚öôÔ∏è  –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ü–ê–†–ê–ú–ï–¢–†–´:")
            print(f"  T_–Ω–∞—Ä (–ù–∞—Ä–∞–±–æ—Ç–∫–∞): {int(data.get('T_nar', 0) / 3600):>10} —á")
            
            print("=" * 50)
        else:
            print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()

# ============================================================================
# –ü–†–ò–ú–ï–† 3: –ú–∞—Å—Å–æ–≤—ã–π –æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ TCP/IP
# ============================================================================

def example_3_mass_polling():
    """–ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤ —á–µ—Ä–µ–∑ TCP/IP."""
    
    print("=== –ü–†–ò–ú–ï–† 3: –ú–∞—Å—Å–æ–≤—ã–π –æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ TCP/IP ===")
    
    # –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    devices = [
        {"name": "–î–æ–º 1", "ip": "192.168.1.100", "port": 5009, "addr": 1},
        {"name": "–î–æ–º 2", "ip": "192.168.1.101", "port": 5009, "addr": 1},
        {"name": "–î–æ–º 3", "ip": "192.168.1.102", "port": 5009, "addr": 1},
    ]
    
    results = []
    
    for device in devices:
        print(f"\nüì° –û–ø—Ä–æ—Å: {device['name']} ({device['ip']})")
        
        client = None
        try:
            # –°–æ–∑–¥–∞–µ–º TCP –∫–ª–∏–µ–Ω—Ç
            client = TEM104_TCP_Client(
                host=device['ip'],
                port=device['port'],
                address=device['addr'],
                timeout=5.0
            )
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
            client.connect()
            print("  ‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª
            protocol = client.auto_detect_protocol()
            print(f"  ‚úì –ü—Ä–æ—Ç–æ–∫–æ–ª: {protocol}")
            
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            data = client.read_all_data()
            
            if data:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result = {
                    "name": device['name'],
                    "ip": device['ip'],
                    "protocol": protocol,
                    "status": "ONLINE",
                    "data": data
                }
                results.append(result)
                
                print(f"  ‚úì –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:")
                print(f"    Q: {data.get('Q', 0):.3f} –ì–∫–∞–ª")
                print(f"    T1: {data.get('T1', 0):.1f}¬∞C")
                print(f"    T2: {data.get('T2', 0):.1f}¬∞C")
            else:
                print("  ‚úó –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
                
        except Exception as e:
            print(f"  ‚úó –û—à–∏–±–∫–∞: {e}")
            results.append({
                "name": device['name'],
                "ip": device['ip'],
                "status": "ERROR",
                "error": str(e)
            })
        finally:
            if client:
                client.disconnect()
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ–ø—Ä–æ—Å–∞–º–∏
        time.sleep(1)
    
    # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É
    print(f"\nüìã –°–í–û–î–ö–ê –û–ü–†–û–°–ê:")
    print("=" * 50)
    online_count = sum(1 for r in results if r['status'] == 'ONLINE')
    print(f"–í—Å–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {len(devices)}")
    print(f"–û–Ω–ª–∞–π–Ω: {online_count}")
    print(f"–û—à–∏–±–∫–∏: {len(devices) - online_count}")
    
    return results

# ============================================================================
# –ü–†–ò–ú–ï–† 4: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
# ============================================================================

def example_4_real_time_monitoring():
    """–ü—Ä–∏–º–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–æ—Å–æ–º."""
    
    print("=== –ü–†–ò–ú–ï–† 4: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ ===")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n")
    
    client = TEM104_Serial_Client(port='COM3', baudrate=9600, address=1)
    
    try:
        client.connect()
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –æ–¥–∏–Ω —Ä–∞–∑
        protocol = client.auto_detect_protocol()
        print(f"–ü—Ä–æ—Ç–æ–∫–æ–ª: {protocol}")
        
        cycle = 0
        while True:
            cycle += 1
            print(f"\nüîÑ –¶–∏–∫–ª {cycle} - {time.strftime('%H:%M:%S')}")
            print("-" * 40)
            
            try:
                # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                data = client.read_all_data()
                
                if data:
                    # –í—ã–≤–æ–¥–∏–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                    print(f"Q: {data.get('Q', 0):8.3f} –ì–∫–∞–ª | "
                          f"T1: {data.get('T1', 0):6.1f}¬∞C | "
                          f"T2: {data.get('T2', 0):6.1f}¬∞C | "
                          f"G1: {data.get('G1', 0):6.2f} –º¬≥/—á")
                else:
                    print("‚úó –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
                    
            except Exception as e:
                print(f"‚úó –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
            
            # –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–æ—Å–∞
            time.sleep(30)
            
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚úó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()
        print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

# ============================================================================
# –ü–†–ò–ú–ï–† 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
# ============================================================================

def example_5_data_logging():
    """–ü—Ä–∏–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞."""
    
    print("=== –ü–†–ò–ú–ï–† 5: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ===")
    
    client = TEM104_Serial_Client(port='COM3', baudrate=9600, address=1)
    
    try:
        client.connect()
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        data = client.read_all_data()
        
        if data:
            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            log_entry = {
                "timestamp": time.strftime("%Y-%m-%d %H:%M:%S"),
                "device_address": client.address,
                "protocol": client.protocol_type,
                "data": data
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            filename = f"tem104_log_{time.strftime('%Y%m%d_%H%M%S')}.json"
            
            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(log_entry, f, ensure_ascii=False, indent=2)
            
            print(f"‚úì –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
            print(f"  –í—Ä–µ–º—è: {log_entry['timestamp']}")
            print(f"  –ü—Ä–æ—Ç–æ–∫–æ–ª: {log_entry['protocol']}")
            print(f"  Q: {data.get('Q', 0):.3f} –ì–∫–∞–ª")
            
        else:
            print("‚úó –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()

# ============================================================================
# –ü–†–ò–ú–ï–† 6: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
# ============================================================================

def example_6_diagnostics():
    """–ü—Ä–∏–º–µ—Ä –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º."""
    
    print("=== –ü–†–ò–ú–ï–† 6: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º ===")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    test_configs = [
        {"port": "COM3", "baudrate": 9600, "address": 1},
        {"port": "COM3", "baudrate": 19200, "address": 1},
        {"port": "COM3", "baudrate": 9600, "address": 2},
    ]
    
    for i, config in enumerate(test_configs, 1):
        print(f"\nüîç –¢–µ—Å—Ç {i}: {config}")
        
        client = TEM104_Serial_Client(**config)
        
        try:
            # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
            client.connect()
            print("  ‚úì –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç")
            
            # –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª
            protocol = client.auto_detect_protocol()
            if protocol:
                print(f"  ‚úì –ü—Ä–æ—Ç–æ–∫–æ–ª: {protocol}")
                
                # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                data = client.read_all_data()
                if data:
                    print(f"  ‚úì –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã (Q: {data.get('Q', 0):.3f})")
                else:
                    print("  ‚ö† –î–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã")
            else:
                print("  ‚úó –ü—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
                
        except Exception as e:
            print(f"  ‚úó –û—à–∏–±–∫–∞: {e}")
        finally:
            client.disconnect()

# ============================================================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ============================================================================

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–º–µ—Ä–æ–≤."""
    
    print("üî• –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ò–ú–ï–†–´ –†–ê–ë–û–¢–´ –° –¢–≠–ú-104")
    print("=" * 50)
    
    examples = [
        ("1", "–ü—Ä–æ—Å—Ç–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è", example_1_simple_identification),
        ("2", "–ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö", example_2_read_all_data),
        ("3", "–ú–∞—Å—Å–æ–≤—ã–π –æ–ø—Ä–æ—Å TCP/IP", example_3_mass_polling),
        ("4", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏", example_4_real_time_monitoring),
        ("5", "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", example_5_data_logging),
        ("6", "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º", example_6_diagnostics),
    ]
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä:")
        for num, name, func in examples:
            print(f"  {num} - {name}")
        print("  0 - –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip()
        
        if choice == "0":
            print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        elif choice in [num for num, _, _ in examples]:
            # –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            for num, name, func in examples:
                if num == choice:
                    print(f"\nüöÄ –ó–∞–ø—É—Å–∫: {name}")
                    print("=" * 50)
                    try:
                        func()
                    except Exception as e:
                        print(f"‚úó –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
                    break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main() 