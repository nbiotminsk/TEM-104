Универсальный протокол обмена с теплосчетчиками ТЭМ-104
1. Введение
Настоящий документ представляет собой унифицированное руководство по протоколу обмена данными с теплосчетчиками серии ТЭМ-104, включая модели ТЭМ-104, ТЭМ-104-1, ТЭМ-104М, ТЭМ-104М-1 и ТЭМ-104 (ТЭСМАРТ). Цель данного руководства — предоставить разработчикам и искусственному интеллекту (ИИ) исчерпывающую информацию для создания универсального программного обеспечения, способного взаимодействовать со всеми перечисленными устройствами.
Документ структурирован таким образом, чтобы сначала описать общие для всех моделей аспекты протокола, а затем — выделить ключевые различия в командах и картах памяти.
2. Общие принципы протокола
2.1. Настройки линии связи
Параметр	RS-232C	RS-485
Скорость, бит/с	9600, 19200, 28800, 38400, 57600, 115200	9600, 19200, 57600, 115200
Сетевой адрес	1-32 (для старых моделей), 1-240 (для новых)	1-32 (для старых моделей), 1-240 (для новых)
Старт-бит	1	1
Стоп-бит	1	1
Биты данных	8	8
Контроль четности	нет	нет
2.2. Общая структура пакета данных
Обмен данными происходит в пакетном режиме "запрос-ответ".
2.2.1. Запрос от ведущего устройства (ПК)
Байт	Обозначение	Пример	Описание
0	SIG	55h	Признак начала пакета
1	ADDR	01h	Сетевой адрес ведомого устройства
2	!ADDR	FEh	Инверсное значение сетевого адреса
3	CGRP	0Fh	Группа команд (см. ниже)
4	CMD	01h	Идентификатор команды
5	LEN	03h	Число байт в поле данных (0-255)
6...	DATA	-	Данные (если есть)
5+LEN	CS	-	Контрольная сумма (дополнение до нуля)
2.2.2. Ответ от ведомого устройства (ТЭМ-104)
Байт	Обозначение	Пример	Описание
0	SIG	AAh	Признак начала пакета
1	ADDR	01h	Сетевой адрес устройства
2	!ADDR	FEh	Инверсное значение сетевого адреса
3	CGRP	0Fh	Группа команд (в расширенных командах может меняться)
4	CMD	01h	Идентификатор команды (в расширенных командах может меняться)
5	LEN	40h	Число байт в поле данных
6...	DATA	-	Данные
5+LEN	CS	-	Контрольная сумма (дополнение до нуля)
2.3. Расчет контрольной суммы (CS)
Контрольная сумма представляет собой байт, который дополняет сумму всех байтов пакета (начиная с SIG и заканчивая последним байтом данных) до нуля при 8-битном сложении. Формула: CS = NOT(B0 + B1 + ... + BN), где B0...BN - байты пакета, NOT - операция побитового логического "НЕ".
2.4. Порядок байт (Endianness)
Все многобайтовые числа (типы Int, Long, Float) хранятся в формате Motorola (Big-Endian), то есть старший байт идет первым (MSB -> LSB). При обработке на PC (архитектура Intel, Little-Endian) требуется инвертировать порядок байт.
3. Универсальные команды
Эти команды работают на всех моделях с одинаковой структурой запроса.
3.1. Идентификация устройства (Команда 0000)
Служит для определения типа подключенного устройства.
    • Запрос:
        ? CGRP: 00h
        ? CMD: 00h
        ? LEN: 00h
    • Ответ:
        ? CGRP: 00h
        ? CMD: 00h
        ? LEN: Длина идентификатора
        ? DATA: ASCII-строка, идентифицирующая модель (например, 'T','E','M','-','1','0','4' или 'T','E','M','-','1','0','4','M','-','1').
4. Сводная таблица команд и различий
Функция	Команда	ТЭМ-104 / 104-1	ТЭМ-104 (ТЭСМАРТ)	ТЭМ-104М / 104М-1	Описание и различия
Идентификация	0000	??	??	??	Универсальная команда. Ответ содержит ASCII-имя модели.
Чтение времени	0F02	?? (память таймера 128 байт)	?	?? (регистры RTC)	Разные назначения! В старых моделях читает блок памяти, где лежит время. В новых - напрямую регистры часов.
Запись времени	0182	?	?	??	Присутствует только в новых моделях (ТЭМ-104М/М-1).
Чтение конфигурации/настроек	0F01 / 8F01#	?? (память таймера 512/2К байт)	?? (память таймера 2К байт)	??	Команда универсальна, но карта памяти (адреса параметров) кардинально отличается для каждой линейки моделей.
Чтение текущих (мгновенных) данных	0C01 / 8C01#	??	?	??	Команда для чтения оперативной памяти. Карта памяти отличается.
Чтение архива (Flash)	0F03 / 8F03#	??	??	??	Команда универсальна, но структура архивной записи и адресация архивов отличаются для каждой линейки.
Поиск записи по дате	0D11 / 8D11#	?? (с версии 2R.37)	?	??	Позволяет найти номер архивной записи по дате и времени.
Примечание: Команды, отмеченные # (например, 8F01), являются расширенными версиями. Они позволяют считывать блоки данных до 256 байт и могут изменять поля CGRP и CMD в ответе для подтверждения запрошенного адреса.
5. Карты памяти и структуры данных (Ключевые различия)
5.1. Линейка ТЭМ-104 / ТЭМ-104-1 / ТЭМ-104 (ТЭСМАРТ)
    • Конфигурация (команда 0F01):
        ? Параметры разбросаны по адресам в памяти таймера (2КБ или 512Б).
        ? Единая структура для текущих и архивных данных (Integrators).
        ? Настройки систем (тип, каналы) хранятся в отдельных структурах (SysCon).
    • Архивная запись (команда 0F03):
        ? Представляет собой структуру Integrators или аналогичную ей.
        ? Размер записи фиксирован (например, 64 байта для ТЭМ-104-1, 384 байта для ТЭСМАРТ).
        ? Дата и время хранятся в формате BCD.
        ? Адреса начала часовых, суточных и месячных архивов фиксированы, но могут отличаться в зависимости от объема Flash-памяти.
    • Текущие данные (команда 0C01 для ТЭМ-104/104-1):
        ? Хранятся в оперативной памяти по фиксированным адресам.
        ? Для ТЭСМАРТ текущие данные являются частью общей структуры в памяти таймера (адрес 0200h и далее).
5.2. Линейка ТЭМ-104М / ТЭМ-104М-1
    • Конфигурация (команда 0F01):
        ? Память настроек имеет четкую блочную структуру: настройки прибора, настройки систем, настройки каналов, сетевые настройки.
        ? Внутри каждого блока параметры расположены по фиксированным смещениям.
    • Архивная запись (команда 0F03):
        ? Единая и более сложная структура для всех типов архивов (часовые, суточные, месячные, события).
        ? Размер записи ~352 байта.
        ? Дата и время хранятся в формате Unix-timestamp (UTC).
        ? Появился архив событий с отдельной структурой.
        ? Адреса начала архивов могут быть прочитаны из области конфигурации.
    • Текущие данные (команда 0C01):
        ? Хранятся в оперативной памяти в виде массива структур SysPar.
6. Инструкции (промпты) для Искусственного Интеллекта
Ниже приведены пошаговые инструкции для ИИ по созданию универсальной программы для опроса теплосчетчиков ТЭМ-104.
Промпт 1: Инициализация и идентификация
"Создай функцию для взаимодействия с теплосчетчиком ТЭМ-104.
    1. Функция должна принимать на вход параметры COM-порта (имя, скорость) и сетевой адрес устройства.
    2. Реализуй базовые функции для формирования и отправки пакета (SIG=55h, ADDR, !ADDR, CGRP, CMD, LEN, DATA, CS) и приема/парсинга ответа (SIG=AAh, ...)
    3. Реализуй расчет контрольной суммы CS = NOT(SUM(bytes)).
    4. Создай метод identifyDevice(). Этот метод должен отправить команду 0000 (CGRP=00, CMD=00).
    5. Проанализируй ASCII-ответ. На основе ответа (ТЭМ-104, ТЭМ-104М, ТЭМ-104М-1, TSM104) определи точную модель устройства и сохрани ее тип для дальнейшего использования."
Промпт 2: Создание диспетчера протоколов
"На основе определенной модели устройства, создай механизм (например, классы-стратегии или фабрику) для выбора правильного набора команд и карты памяти.
    1. Создай базовый абстрактный класс TemProtocol с методами readConfig(), readCurrentValues(), readArchiveRecord(record_number, archive_type).
    2. Создай конкретные реализации для каждой модели:
        ? Tem104Protocol (для ТЭМ-104, 104-1, ТЭСМАРТ)
        ? Tem104MProtocol (для ТЭМ-104М, 104М-1)
    3. Фабрика или диспетчер должны возвращать экземпляр нужного класса протокола в зависимости от результата identifyDevice()."
Промпт 3: Реализация чтения данных для Tem104Protocol
"Реализуй методы для класса Tem104Protocol.
    1. readConfig(): Используй команду 0F01 для чтения памяти таймера (адреса 0000h - 07FFh). Создай парсер, который будет извлекать параметры (номер прибора, типы систем, настройки каналов и т.д.) согласно карте памяти для ТЭМ-104/ТЭСМАРТ.
    2. readCurrentValues(): Для ТЭМ-104/104-1 используй команду 0C01 для чтения оперативной памяти. Для ТЭСМАРТ читай данные из памяти таймера (команда 0F01, начиная с адреса 0200h).
    3. readArchiveRecord(record_number, archive_type):
        ? Используй команду 0F03.
        ? Вычисли адрес записи: base_address + record_number * record_size. base_address и record_size зависят от типа архива (часовой/суточный) и модели.
        ? Создай парсер для архивной записи. Обрати внимание, что дата/время хранятся в формате BCD.
        ? Реализуй корректное преобразование типов данных: BCD в int, Motorola Float в Intel Float, Motorola Long в Intel Long (требуется смена порядка байт)."
Промпт 4: Реализация чтения данных для Tem104MProtocol
"Реализуй методы для класса Tem104MProtocol.
    1. readConfig(): Используй команду 0F01 для чтения области настроек. Создай парсер для блочной структуры (настройки прибора, систем, каналов).
    2. readCurrentValues(): Используй команду 0C01 для чтения оперативной памяти. Распарси массив структур SysPar.
    3. readArchiveRecord(record_number, archive_type):
        ? Используй команду 0F03.
        ? Вычисли адрес записи аналогично протоколу ТЭМ-104, но используя базовые адреса и размеры для ТЭМ-104М.
        ? Создай парсер для новой, более сложной архивной записи.
        ? Ключевое отличие: дата и время хранятся в формате Unix-timestamp. Преобразуй его в читаемый формат.
        ? Не забудь про смену порядка байт для Float и Long."
Промпт 5: Финальная сборка и интерфейс
"Создай главный управляющий класс или скрипт.
    1. Он должен последовательно вызывать:
        ? Подключение к порту.
        ? Идентификацию устройства.
        ? Получение нужного объекта протокола через фабрику.
    2. Предоставь пользователю простые методы для получения данных, например:
        ? getDeviceConfig() -> возвращает структурированный объект с конфигурацией.
        ? getCurrentData() -> возвращает объект с текущими показаниями.
        ? getArchiveData(start_date, end_date, archive_type) -> сам находит нужные записи (можно использовать команду 0D11 для ТЭМ-104М), считывает их и возвращает массив записей.
    3. Обеспечь обработку ошибок: неверная контрольная сумма, таймаут ответа, отсутствие устройства."
